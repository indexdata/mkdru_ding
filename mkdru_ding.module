<?php

/**
 * Implements hook_search_info()
 */
function mkdru_ding_search_info() {
  return array(
    'title'               => 't(Meta search)',
    'path'                => 'meta',
    'conditions_callback' => 'mkdru_ding_search_conditions_callback',
  );
}

/**
 * Implements hook_search_page()
 */
function mkdru_ding_search_page($results) {
  $output['prefix']['#markup'] = theme('mkdru_results');
  $output['suffix']['#markup'] = '';
  return $output;
}

/**
 * Implements hook_block_info()
 */
function mkdru_ding_block_info() {
  $blocks['mkdru_ding_search_results'] = array(
    'info' => t('mkdru ding search results container.'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function mkdru_ding_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'mkdru_ding_search_results':
      $block['subject'] = t('mkdru ding search results');
      $block['content'] = '<div class="mkdru-pager"></div><div class="mkdru-counts"></div><p></p><div class="mkdru-result-list"></div><div class="mkdru-pager"></div><div class="mkdru-counts"></div>';
      break;
  }
  return $block;
}
/**
 * Search callback function that is invoked by search_view()
 */
function mkdru_ding_search_conditions_callback($keys) {}

/**
 * Implements hook_search_execute()
 */
function mkdru_ding_search_execute($keys = NULL, $conditions = NULL) {
  // Javascript from base mkdru
  theme('mkdru_js', array('setting' => array('mkdru' => array(
    'settings' => json_encode(variable_get('mkdru_ding', NULL)),
    'state' => array('query' => $keys)))));

  // Ding integration
  $path = drupal_get_path('module', 'mkdru_ding');
  drupal_add_js($path . '/recipe.js', array(
    'type' => 'file', 'scope' => 'footer', 'defer' => TRUE, 'preprocess' => FALSE));
  drupal_add_js($path . '/mkdru.theme.js', array(
    'type' => 'file', 'scope' => 'footer', 'defer' => TRUE, 'preprocess' => FALSE));
  drupal_add_js($path . '/mkdru_ding.js', array(
    'type' => 'file', 'scope' => 'footer', 'defer' => TRUE, 'preprocess' => FALSE));
  return array();
}

/**
 * Implements hook_ding_facetbrowser()
 */
function mkdru_ding_ding_facetbrowser() {
  $results             = new stdClass();
  $results->facets     = array();
  $results->show_empty = TRUE; # Show an empty facetbrowser block, even if search didn't return any results
  return $results;
}

/**
* Implements hook_menu()
*/
function mkdru_ding_menu() {
  $items['admin/config/search/mkdru_ding'] = array(
    'title' => 'Pazpar2 Metasearch Ding Integration',
    'description' => 'Search settings for mkdru instance integrated into Ding.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mkdru_ding_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
* Implements hook_init()
*/
function mkdru_ding_init() {
  // Applies our module specific CSS to all pages. This works best because
  // all CSS is aggregated and cached so we reduce the number of HTTP
  // requests and the size is negligible.
  drupal_add_css(drupal_get_path('module', 'mkdru_ding') .'/mkdru_ding.css');
}


/**
 * Settings form
 */
function mkdru_ding_settings($form, &$form_state) {
  $form_state['build_info']['args']['settings'] = variable_get('mkdru_ding', NULL);
  $form = drupal_retrieve_form('mkdru_settings_form', $form_state);
  $form['settings']['#title'] = t('Search settings for DING integration');
  $settings=$form_state['build_info']['args']['settings'];
  $form['settings']['specific_author_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Search-attribute for author-links'),
    '#description' => t('Use this specific attribute for author-links instead of any'),
    '#required' => FALSE,
    '#default_value' => $settings['specific_author_field'],
  );
  $form['settings']['specific_subject_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Search-attribute for subject-links'),
    '#description' => t('Use this specific attribute for subject-links instead of any'),
    '#required' => FALSE,
    '#default_value' => $settings['specific_subject_field'],
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save configuration',
  );
  return $form;
}

/**
 * Settings form handler
 */
function mkdru_ding_settings_submit($form, &$form_state) {
  variable_set('mkdru_ding', $form_state['values']['settings']);
  drupal_set_message(t('The configuration options have been saved.'));
}

/**
* Implements hook_theme().
*/
function mkdru_ding_theme() {
  return array(
    'mkdru_results' => array(
      'template' => 'mkdru-results',
      'arguments' => array(),
    ),
  );
}
